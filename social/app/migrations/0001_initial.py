# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-03-16 21:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('displayName', models.CharField(max_length=512)),
                ('github', models.URLField(blank=True, default=b'')),
                ('bio', models.TextField(blank=True, default=b'')),
                ('activated', models.BooleanField(default=False)),
                ('followed_authors', models.ManyToManyField(blank=True, related_name='_author_followed_authors_+', to='app.Author')),
                ('friends', models.ManyToManyField(blank=True, related_name='_author_friends_+', to='app.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Author', verbose_name=b'author of the comment')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('host', models.URLField(unique=True)),
                ('service_url', models.URLField(unique=True)),
                ('local', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_story', models.TextField()),
                ('post_story_html', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=b'')),
                ('use_markdown', models.BooleanField(default=False)),
                ('visibility', models.CharField(choices=[(b'PUBLIC', b'Public'), (b'FOAF', b'FOAF'), (b'FRIENDS', b'Friends'), (b'PRIVATE', b'Private'), (b'SERVERONLY', b'This Server Only')], default=b'PUBLIC', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Author', verbose_name=b'author of the posts')),
                ('visibleTo', models.ManyToManyField(related_name='visible_posts', to='app.Author')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='app.Post'),
        ),
        migrations.AddField(
            model_name='author',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Node'),
        ),
        migrations.AddField(
            model_name='author',
            name='outgoing_friend_requests',
            field=models.ManyToManyField(blank=True, related_name='incoming_friend_requests', to='app.Author'),
        ),
        migrations.AddField(
            model_name='author',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
    ]
